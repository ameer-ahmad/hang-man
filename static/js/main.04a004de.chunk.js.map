{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","helpers/helpers.js","components/Popup.js","components/Notification.js","App.js","index.js"],"names":["Header","Figure","errors","wrongLetters","length","height","width","className","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","key","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","style","display","onClick","Notification","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04a004de.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n// rafce\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <h1>Hangman</h1>\r\n      <p>Find the hidden word - Enter a letter</p>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Figure = ({ wrongLetters }) => {\r\n  const errors = wrongLetters.length\r\n\r\n  return (\r\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\r\n      {/* <!-- Rod --> */}\r\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\r\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\r\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\r\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\r\n\r\n      {/* <!-- Head --> */}\r\n      {errors > 0 &&\r\n        <circle cx=\"140\" cy=\"70\" r=\"20\" />\r\n      }\r\n      {/* <!-- Body --> */}\r\n      {errors > 1 &&\r\n        <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />\r\n      }\r\n      {/* <!-- Arms --> */}\r\n      {errors > 2 &&\r\n        <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />\r\n      }\r\n      {errors > 3 &&\r\n        <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />\r\n      }\r\n      {/* <!-- Legs --> */}\r\n      {errors > 4 &&\r\n        <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />\r\n      }\r\n      {errors > 5 &&\r\n        <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />\r\n      }\r\n    </svg>\r\n  )\r\n}\r\n\r\nexport default Figure\r\n","import React from 'react'\r\n\r\nconst WrongLetters = ({ wrongLetters }) => {\r\n\r\n  return (\r\n    <div className=\"wrong-letters-container\">\r\n      <div>\r\n        {wrongLetters.length > 0 && \r\n          <p>Wrong</p>\r\n        }\r\n        {wrongLetters\r\n          .map((letter, i) => <span key={i}>{letter}</span>)\r\n          .reduce((prev, curr) => prev === null ? [curr] : [prev, ', ', curr], null)}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WrongLetters\r\n","import React from 'react';\r\n\r\nconst Word = ({ selectedWord, correctLetters }) => {\r\n\r\n  return (\r\n    <div className=\"word\">\r\n      {selectedWord.split('').map((letter, i) => {\r\n        return (\r\n          <span className=\"letter\" key={i}>\r\n            {correctLetters.includes(letter) ? letter : ''}\r\n          </span>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Word\r\n","export function showNotification(setter) {\r\n  setter(true);\r\n  setTimeout(() => {\r\n    setter(false);\r\n  }, 2000);\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\n  let status = 'win';\r\n\r\n  // Check for win\r\n  word.split('').forEach(letter => {\r\n    if(!correct.includes(letter)){\r\n      status = '';\r\n    }\r\n  });\r\n  \r\n  // Check for lose\r\n  if(wrong.length === 6) status = 'lose';\r\n\r\n  return status\r\n}","import React, { useEffect } from 'react';\r\nimport { checkWin } from '../helpers/helpers';\r\n\r\nconst Popup = ({correctLetters, wrongLetters, selectedWord, setPlayable, playAgain}) => {\r\n  let finalMessage = '';\r\n  let finalMessageRevealWord = '';\r\n  let playable = true;\r\n\r\n  if( checkWin(correctLetters, wrongLetters, selectedWord) === 'win' ) {\r\n    finalMessage = 'Congratulations! You won! ðŸ˜ƒ';\r\n    playable = false;\r\n  } else if( checkWin(correctLetters, wrongLetters, selectedWord) === 'lose' ) {\r\n    finalMessage = 'Unfortunately you lost. ðŸ˜•';\r\n    finalMessageRevealWord = `...the word was: ${selectedWord}`;\r\n    playable = false;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPlayable(playable);\r\n  });\r\n\r\n  return (\r\n    <div className=\"popup-container\" style={finalMessage !== '' ? {display:'flex'} : {}}>\r\n      <div className=\"popup\">\r\n        <h2>{finalMessage}</h2>\r\n        <h3>{finalMessageRevealWord}</h3>\r\n        <button onClick={playAgain}>Play Again</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Popup\r\n","import React from 'react'\r\n\r\nconst Notification = ({ showNotification }) => {\r\n  return (\r\n    <div className={`notification-container ${showNotification ? 'show' : ''}`}>\r\n      <p>You have already entered this letter</p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Notification\r\n","import React, { useState, useEffect } from 'react';\r\nimport Header from './components/Header';\r\nimport Figure from './components/Figure';\r\nimport WrongLetters from './components/WrongLetters';\r\nimport Word from './components/Word';\r\nimport Popup from './components/Popup';\r\nimport Notification from './components/Notification';\r\nimport { showNotification as show, checkWin } from './helpers/helpers';\r\n\r\nimport './App.css';\r\n\r\nconst words = ['application', 'programming', 'interface', 'wizard'];\r\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\r\n\r\nfunction App() {\r\n  const [playable, setPlayable] = useState(true);\r\n  const [correctLetters, setCorrectLetters] = useState([]);\r\n  const [wrongLetters, setWrongLetters] = useState([]);\r\n  const [showNotification, setShowNotification] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const handleKeydown = event => {\r\n      const { key, keyCode } = event;\r\n      if (playable && keyCode >= 65 && keyCode <= 90) {\r\n        const letter = key.toLowerCase();\r\n        if (selectedWord.includes(letter)) {\r\n          if (!correctLetters.includes(letter)) {\r\n            setCorrectLetters(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        } else {\r\n          if (!wrongLetters.includes(letter)) {\r\n            setWrongLetters(currentLetters => [...currentLetters, letter]);\r\n          } else {\r\n            show(setShowNotification);\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('keydown', handleKeydown);\r\n\r\n    return () => window.removeEventListener('keydown', handleKeydown);\r\n  }, [correctLetters, wrongLetters, playable]);\r\n\r\n  function playAgain() {\r\n    setPlayable(true);\r\n\r\n    // Empty Arrays\r\n    setCorrectLetters([]);\r\n    setWrongLetters([]);\r\n\r\n    const random = Math.floor(Math.random() * words.length);\r\n    selectedWord = words[random];\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <div className=\"game-container\">\r\n        <Figure wrongLetters={wrongLetters} />\r\n        <WrongLetters wrongLetters={wrongLetters} />\r\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\r\n      </div>\r\n      <Popup correctLetters={correctLetters} wrongLetters={wrongLetters} selectedWord={selectedWord} setPlayable={setPlayable} playAgain={playAgain} />\r\n      <Notification showNotification={showNotification} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}